C++RAW
#include "UnityPrefix.h"
#include "Runtime/Shaders/Material.h"
#include "Runtime/Shaders/Shader.h"
#include "Runtime/Scripting/ScriptingUtility.h"

CSRAW
using System;
using UnityEngine;
using Object=UnityEngine.Object;


namespace UnityEditor
{

///*undocumented*
CLASS EditorMaterialUtility
	CUSTOM static void ResetDefaultTextures (Material material, bool overrideSetTextures)
	{
		material->ResetDefaultTextures (overrideSetTextures);
	}
	
	CUSTOM static void SetShaderDefaults (Shader shader, string[] name, Texture[] textures)
	{
		vector<string> cnames;
		StringMonoArrayToVector(name, cnames);
		vector<Texture*> cobjects;
		MonoObjectArrayToVector<Texture>(textures, cobjects);

		if (cnames.size () != cobjects.size ())
		{
			ErrorString("SetShaderDefaults: Number of names != number of textures");
			return;
		}

		// convert to map for passing to shader
		std::map <UnityStr, PPtr <Texture> > defaults;
		for (int i = 0; i < cnames.size(); i++)
			defaults[cnames[i]] = cobjects[i];
		
		shader->SetDefaultTextures (defaults);
	}
END

CSRAW }
